From 47d4e3388a1abdc2694cf8add032addd2c6f0679 Mon Sep 17 00:00:00 2001
From: Lubomir Rintel <lkundrak@v3.sk>
Date: Thu, 4 Dec 2014 22:54:08 +0100
Subject: [PATCH] Fix config read for AVR devices with one or two fuses

Not all families have three. Not sure if there's better way to derermine,
but seems like protocol variant is a pretty safe, though a bit ugly, way
to determine the family. Manually checked against the vendor utility's GUI.

Tested with ATMEGA32, should fix the issue #23 too.
---
 fuses.c | 13 +++++++++++++
 fuses.h |  2 ++
 main.c  | 28 ++++++++++++++++++++++++++--
 3 files changed, 41 insertions(+), 2 deletions(-)

diff --git a/fuses.c b/fuses.c
index cd6136a..62589ad 100644
--- a/fuses.c
+++ b/fuses.c
@@ -2,6 +2,19 @@
 #include "fuses.h"
 
 fuse_decl_t avr_fuses[] = {
+	{ .name = "fuses", .minipro_cmd = 0x12, .length = 1, .offset = 0 },
+	{ .name = "lock_byte", .minipro_cmd = 0x41, .length = 1, .offset = 0 },
+	{ .name = NULL },
+};
+
+fuse_decl_t avr2_fuses[] = {
+	{ .name = "fuses_lo", .minipro_cmd = 0x12, .length = 1, .offset = 0 },
+	{ .name = "fuses_hi", .minipro_cmd = 0x12, .length = 1, .offset = 1 },
+	{ .name = "lock_byte", .minipro_cmd = 0x41, .length = 1, .offset = 0 },
+	{ .name = NULL },
+};
+
+fuse_decl_t avr3_fuses[] = {
 	{ .name = "fuses_lo", .minipro_cmd = 0x12, .length = 1, .offset = 0 },
 	{ .name = "fuses_hi", .minipro_cmd = 0x12, .length = 1, .offset = 1 },
 	{ .name = "fuses_ext", .minipro_cmd = 0x12, .length = 1, .offset = 2 },
diff --git a/fuses.h b/fuses.h
index 13b8fc4..ff574a7 100644
--- a/fuses.h
+++ b/fuses.h
@@ -9,6 +9,8 @@ typedef struct fuse_decl {
 } fuse_decl_t;
 
 extern fuse_decl_t avr_fuses[];
+extern fuse_decl_t avr2_fuses[];
+extern fuse_decl_t avr3_fuses[];
 extern fuse_decl_t pic_fuses[];
 extern fuse_decl_t pic2_fuses[];
 
diff --git a/main.c b/main.c
index 6e9a5e9..b0b1660 100644
--- a/main.c
+++ b/main.c
@@ -468,9 +468,33 @@ int main(int argc, char **argv) {
 
 	/* TODO: put in devices.h and remove this stub */
 	switch(device->protocol_id) {
+
 		case 0x71:
-			device->fuses = avr_fuses;
-			break;
+		  switch(device->variant) {
+			case 0x01:
+			case 0x21:
+			case 0x44:
+			case 0x61:
+				device->fuses = avr_fuses;
+				break;
+			case 0x00:
+			case 0x20:
+			case 0x22:
+			case 0x43:
+			case 0x85:
+				device->fuses = avr2_fuses;
+				break;
+			case 0x0a:
+			case 0x2a:
+			case 0x48:
+			case 0x49:
+			case 0x6b:
+				device->fuses = avr3_fuses;
+				break;
+			default:
+				PERROR("Unknown AVR device");
+		  }
+		  break;
  	        case 0x10063:   //  select 2 fuses
 		  device->fuses=pic2_fuses;
 		  device->protocol_id&=0xFFFF;
-- 
2.1.0

